name: Upload Python Package

on:
  release:
    types: [created]

jobs:
  deploy:
    runs-on: ${{ matrix.os }}
    env:
      BAZEL_VERSION: 4.0.0
      TENSORFLOW_VERSION: 2.4.1

    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, ubuntu-latest]
        python-version: [3.6, 3.7, 3.8]
        include:
          - os: macos-latest
            bazel-target: darwin
          - os: ubuntu-latest
            bazel-target: linux

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Set up bazel
      run: |
        curl -LO https://github.com/bazelbuild/bazel/releases/download/${BAZEL_VERSION}/bazel-${BAZEL_VERSION}-installer-${{ matrix.bazel-target }}-x86_64.sh
        chmod +x bazel-${BAZEL_VERSION}-installer-${{ matrix.bazel-target }}-x86_64.sh
        ./bazel-${BAZEL_VERSION}-installer-${{ matrix.bazel-target }}-x86_64.sh --user
        export PATH="$PATH:$HOME/bin"
        rm bazel-${BAZEL_VERSION}-installer-${{ matrix.bazel-target }}-x86_64.sh
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install tensorflow-cpu==${TENSORFLOW_VERSION}
        pip install setuptools wheel twine
    - name: Build and publish
      env:
        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
        bazel build -s //tf_ops:build_pip_pkg //python:build_pip_pkg --verbose_failures
        ./bazel-bin/python/build_pip_pkg artifacts
        ./bazel-bin/tf_ops/build_pip_pkg artifacts
        twine upload artifacts/*
